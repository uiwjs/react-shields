{"version":3,"file":"static/js/main.60f8059a.js","mappings":"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A,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,UC1BA,SAASC,EAAUr0B,GACxB,IAAM57B,EACiB,kBAAd47B,EAAyBA,EAAUr8B,WAAW,GAAKq8B,EAE5D,OAAO57B,GAAQ,IAAMA,GAAQ,EAC/B,CCLO,SAASkwD,EAAct0B,GAC5B,IAAM57B,EACiB,kBAAd47B,EAAyBA,EAAUr8B,WAAW,GAAKq8B,EAE5D,OACG57B,GAAQ,IAAcA,GAAQ,KAC9BA,GAAQ,IAAcA,GAAQ,IAC9BA,GAAQ,IAAcA,GAAQ,EAEnC,CCNO,SAASmwD,EAAiBv0B,GAC/B,OCJK,SAAwBA,GAC7B,IAAM57B,EACiB,kBAAd47B,EAAyBA,EAAUr8B,WAAW,GAAKq8B,EAE5D,OACG57B,GAAQ,IAAMA,GAAQ,KACt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","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@uiw/github-corners/src/index.ts","../node_modules/@uiw/react-github-corners/src/index.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/hastscript/lib/svg.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/index.js","../node_modules/github-slugger/regex.js","../node_modules/github-slugger/index.js","../node_modules/hast-util-has-property/lib/index.js","../node_modules/hast-util-heading-rank/lib/index.js","../node_modules/hast-util-to-string/index.js","../node_modules/rehype-slug/index.js","../node_modules/hast-util-is-element/index.js","../node_modules/rehype-autolink-headings/lib/index.js","../node_modules/rehype-attr/src/utils.ts","../node_modules/rehype-attr/src/index.ts","../node_modules/rehype-ignore/src/index.ts","../node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../node_modules/direction/index.js","../node_modules/hast-util-select/lib/enter-state.js","../node_modules/hast-util-select/lib/attribute.js","../node_modules/bcp-47-match/index.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../node_modules/hast-util-select/lib/pseudo.js","../node_modules/hast-util-select/lib/test.js","../node_modules/hast-util-select/lib/name.js","../node_modules/hast-util-select/lib/class-name.js","../node_modules/hast-util-select/lib/id.js","../node_modules/hast-util-select/lib/walk.js","../node_modules/hast-util-select/lib/parse.js","../node_modules/hast-util-select/lib/index.js","../node_modules/rehype-rewrite/src/index.ts","../node_modules/@uiw/react-markdown-preview/src/nodes/octiconLink.ts","../node_modules/@uiw/react-markdown-preview/src/plugins/reservedMeta.ts","../node_modules/@uiw/react-markdown-preview/src/index.tsx","../node_modules/@uiw/react-markdown-preview/src/plugins/useCopied.tsx","../node_modules/@uiw/react-markdown-preview/src/nodes/copy.ts","logo.svg","../esm/common/Container.js","../esm/common/Base.js","../esm/github/Issues.js","../esm/github/Size.js","../esm/github/Downloads.js","../esm/github/Activity.js","../esm/github/Version.js","../esm/github/License.js","../esm/github/Analysis.js","../esm/github/Social.js","../esm/github/Github.js","../esm/github/index.js","../esm/coverages/Coverages.js","../esm/coverages/Codacy.js","../esm/coverages/Coverage.js","../esm/coverages/index.js","../esm/npm/Version.js","../esm/npm/Size.js","../esm/npm/Npm.js","../esm/npm/index.js","App.tsx","../README.md","index.tsx","../../src/main.js","../node_modules/@wcj/dark-mode/dist/dark-mode.min.js","../node_modules/boolbase/index.js","../node_modules/css-selector-parser/lib/index.js","../node_modules/css-selector-parser/lib/parser-context.js","../node_modules/css-selector-parser/lib/render.js","../node_modules/css-selector-parser/lib/utils.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/parse-numeric-range/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/comma-separated-tokens/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/core.js","../node_modules/hastscript/lib/html.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-reference-invalid/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/space-separated-tokens/index.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// @ts-ignore\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'github-corners': GithubCorners;\n  }\n  namespace JSX {\n    interface IntrinsicElements {\n      'github-corners': Partial<GithubCorners> | {\n        style?: Partial<CSSStyleDeclaration> | React.CSSProperties;\n      };\n    }\n  }\n}\n\nconst GITHUB_CORNERS_TEMPLATE = document.createElement(\"template\");\nGITHUB_CORNERS_TEMPLATE.innerHTML = `\n<style>\n:host a:hover .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n@keyframes octocat-wave {\n  0%, 100% { transform: rotate(0); }\n  20%, 60% { transform: rotate(-25deg); }\n  40%, 80% { transform: rotate(10deg); }\n}\n@media (max-width:500px) {\n  :host a:hover .octo-arm { animation: none; }\n  :host .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n}\n:host svg {\n  z-index: 99;\n  position: fixed;\n  border: 0px;\n  top: 0px;\n}\n</style>\n<svg width=\"54\" height=\"54\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n  <a xlink:href=\"https://github.com/uiwjs/react-github-corners\" target=\"_blank\" rel=\"nofollow sponsored\" style=\"fill: rgb(21, 21, 19); color: rgb(255, 255, 255);\">\n    <g>\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\" style=\"transform-origin: 130px 106px;\"></path>\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n    </g>\n  </a>\n</svg>\n`;\n\nexport class GithubCorners extends HTMLElement {\n  /** Sets the z-order of a positioned element and its descendants or flex items. */\n  'z-index'?: string;\n  height?: string | number;\n  width?: string | number;\n  href?: string;\n  color?: string;\n  fill?: string;\n  position?: string;\n  target?: string;\n  top?: string;\n  left?: string;\n  right?: string = '0';\n  bottom?: string;\n  transform?: string;\n  private shadow: ShadowRoot\n  static get observedAttributes(): string[] {\n    return ['style', 'z-index', 'target', 'height', 'width', 'href', 'color', 'fill', 'position', 'top', 'left', 'right', 'bottom', 'transform'];\n  }\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.shadow.appendChild(this.ownerDocument.importNode(GITHUB_CORNERS_TEMPLATE.content, true));\n    this.update()\n  }\n  private setAttr(name: string, value: string) {\n    const svg = this.shadow.querySelector('svg');\n    if (/(href)/.test(name.toLocaleLowerCase())) {\n      svg.lastElementChild.setAttribute('xlink:href', value);\n    } else if (/(color|fill)/.test(name.toLocaleLowerCase())) {\n      (svg.firstElementChild as HTMLAnchorElement).style[name as any] = value;\n    } else if (/(z-index|position|top|left|right|bottom|transform)/.test(name.toLocaleLowerCase())) {\n      svg.style[name as any] = value;\n    } else {\n      svg.setAttribute(name, value);\n    }\n  }\n  private update() {\n    ;[...this.getAttributeNames(), 'right'].forEach((name) => {\n      const value = this.getAttribute(name) || this[name as keyof GithubCorners] as any || '';\n      this.setAttr(name, value);\n    });\n  }\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.setAttr(name, newValue);\n    }\n  }\n}\n\ncustomElements.define('github-corners', GithubCorners);","import React from 'react';\nimport '@uiw/github-corners';\n\nexport interface GitHubCornersProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  /**\n   * The link to your project page.\n   */\n  href?: string;\n  /**\n   * The width and height of the corner. \n   * Default: `80`\n   */\n  size?: number;\n  /**\n   * The background color of the corner.\n   * Default: `#151513`\n   */\n  bgColor?: string;\n  /**\n   * The Github logo color of the corner.\n   * Default: `#fff`\n   */\n  color?: string;\n  /**\n   * The position of corner. \n   * Default: `right`\n   */\n  position?: 'left' | 'right';\n  /** Is it displayed at the bottom? */\n  bottom?: boolean,\n  /** \n   * It is positioned relative to the initial containing block established.\n   * Default: `false`\n   */\n  fixed?: boolean;\n  /**\n   * Sets the z-order of a positioned element and its descendants or flex items.\n   */\n  zIndex?: number;\n}\n\nexport default function githubCorners(props: GitHubCornersProps) {\n  const { size = 80, fixed = false, bottom, zIndex, className, style, bgColor = '#151513', color = '#fff', position = 'right', ...otherProps } = props;\n  const styl: React.CSSProperties = position === 'left' ? { left: 0, right: 'initial', transform: 'scale(-1, 1)' } : { right: 0, left: 'initial', transform: 'scale(1, 1)' };\n  if (bottom) {\n    styl.bottom = 0;\n    styl.top = 'initial';\n    styl.transform = position === 'left' ? 'scale(-1, -1)' : 'scale(1, -1)';\n  } else {\n    styl.bottom = 'initial';\n    styl.top = 0;\n  }\n  return (\n    <github-corners\n      target=\"__blank\"\n      width={size}\n      height={size}\n      href={props.href}\n      position={fixed ? 'fixed' : 'absolute'}\n      z-index={zIndex}\n      style={style}\n      fill={bgColor}\n      color={color}\n      {...styl}\n      {...otherProps}\n    />\n  );\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                // @ts-expect-error: to do: update `mdast-util-types` to allow explicit `undefined`s.\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5Fragment\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['documentType']} P5Doctype\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['parentNode']} P5Parent\n * @typedef {import('parse5').Token.Attribute} P5Attribute\n * @typedef {Exclude<P5Node, P5Document | P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {'html' | 'svg'} Space\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {html, svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst own = {}.hasOwnProperty\n\n/** @type {(from: Node, schema: Schema) => P5Node} */\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to Parse5’s AST.\n *\n * @param {Node} tree\n *   Tree to transform.\n * @param {Options | Space | null | undefined} [options]\n *   Configuration.\n * @returns {P5Node}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const space = options && typeof options === 'object' ? options.space : options\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  /** @type {P5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    // @ts-expect-error: change to `null` in a major?\n    parentNode: undefined\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  /** @type {P5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  /** @type {P5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Element}\n *   `parse5` node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<P5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  /** @type {P5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: html and svg both have a space.\n    namespaceURI: webNamespaces[currentSchema.space],\n    childNodes: [],\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<string | number> | string | number | boolean | null | undefined} value\n *   hast property value.\n * @returns {P5Attribute | void}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {P5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<Content>} children\n *   List of children.\n * @param {P5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<P5Child>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<P5Child>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {P5Child} */\n      // @ts-expect-error assume no document.\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Node} from\n *   hast node.\n * @param {P5Node} to\n *   `parse5` node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      // @ts-expect-error assume this is set.\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      // @ts-expect-error assume this is set.\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processInputToken(startTag(node))\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processInputToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processInputToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value =\n    typeof field === 'string' &&\n    isNode(node) &&\n    node.type === 'element' &&\n    node.properties &&\n    own.call(node.properties, field) &&\n    node.properties[field]\n\n  return value !== null && value !== undefined && value !== false\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\n// To do next major: return `undefined`.\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Node} node\n *   Node to check.\n * @returns {number | null}\n *   Rank of the heading or `null` if not a heading.\n */\nexport function headingRank(node) {\n  const name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s.\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeSlug(options = {}) {\n  const prefix = options.prefix || ''\n\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {null | undefined | string | TestFunctionAnything | Array<string | TestFunctionAnything>} Test\n *   Check for an arbitrary element, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if an element passes a test, unaware of TypeScript inferral.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {boolean | void}\n *   Whether this element passes the test.\n */\n\n/**\n * @template {Element} T\n *   Element type.\n * @typedef {T['tagName'] | TestFunctionPredicate<T> | Array<T['tagName'] | TestFunctionPredicate<T>>} PredicateTest\n *   Check for an element that can be inferred by TypeScript.\n */\n\n/**\n * Check if an element passes a certain node test.\n *\n * @template {Element} T\n *   Element type.\n * @callback TestFunctionPredicate\n *   Complex test function for an element that can be inferred by TypeScript.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {element is T}\n *   Whether this element passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is an element, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} T\n *   Element type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific element, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is T}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if `node` is an `Element` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific element.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is an element and passes a test.\n */\nexport const isElement =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *  When nullish, checks if `node` is an `Element`.\n *   *  When `string`, works like passing `(element) => element.tagName === test`.\n *   *  When `function` checks if function passed the element is true.\n *   *  When `array`, checks any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<string | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain tag name.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","import { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport { RehypeAttrsOptions } from './';\n\nexport const getURLParameters = (url: string = '') =>\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\n      (a: Record<string, string | number | boolean>, v: string) => (\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\n      ),\n      {}\n    )\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","import type { Plugin } from 'unified';\nimport type { Root, RootContent, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\n\n/**\n * Raw string of HTML embedded into HTML AST.\n */\nexport interface Raw extends Literal {\n  /**\n   * Node type.\n   */\n  type: 'raw'\n}\n\n// Register nodes in content.\ndeclare module 'hast' {\n  interface RootContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n  interface ElementContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n}\n\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  (item.value || '').trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @param tree\n *   Tree to filter.\n * @param options\n *   Configuration (optional).\n * @param test\n *   `unist-util-is` compatible test.\n * @returns\n *   New filtered tree.\n *\n *   `null` is returned if `tree` itself didn’t pass the test, or is cascaded\n *   away.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: Options | null | undefined, test: Check | null | undefined) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: Options | null | undefined) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Options | Test | null | undefined} [options]\n     * @param {Test | null | undefined} [test]\n     * @returns {Node | null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      /** @type {boolean | null | undefined} */\n      const cascadeRaw =\n        options && typeof options === 'object' && 'cascade' in options\n          ? /** @type {boolean | null | undefined} */ (options.cascade)\n          : undefined\n      const cascade =\n        cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       *   Current node.\n       * @param {number | undefined} [index]\n       *   Index of `node` in `parent`.\n       * @param {Parent | undefined} [parent]\n       *   Parent node.\n       * @returns {Node | null}\n       *   Shallow copy of `node`.\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array<Node>} */\n        const children = []\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          let childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            const result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n        /** @type {string} */\n        let key\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\n/**\n * @param {Element} node\n * @return {string|null}\n */\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n      node.properties.className.push('code-highlight')\n      const lang = getLanguage(node)\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')){\n            rootLang=lang.split('-')[1]\n          } else{\n            rootLang=lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '-') {\n          line.properties.className.push('deleted')\n        } else if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '+') {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').ElementChild} ElementChild\n * @typedef {import('./types.js').Direction} Direction\n * @typedef {import('unist-util-visit/complex-types.js').Visitor<ElementChild>} Visitor\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {visit, EXIT, SKIP} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {SelectState} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Node} node\n *   Node to enter.\n * @returns {() => void}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let dirInferred\n\n  if (node.type === 'element' && node.properties) {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== undefined && lang !== null) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          dirInferred = node.properties.value\n            ? // @ts-expect-error Assume string\n              dirBidi(node.properties.value)\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Direction | undefined}\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementChild} node\n * @returns {Direction | undefined}\n */\nfunction dirProperty(node) {\n  const value =\n    node.type === 'element' &&\n    node.properties &&\n    typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Schema} Schema\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {zwitch} from 'zwitch'\n\n/** @type {(query: RuleAttr, element: Element, info: Info) => boolean} */\nconst handle = zwitch('operator', {\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    '=': exact,\n    '~=': spaceSeparatedList,\n    '|=': exactOrPrefix,\n    '^=': begins,\n    '$=': ends,\n    '*=': contains\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {Schema} schema\n * @returns {boolean}\n */\nexport function attribute(query, element, schema) {\n  const attrs = query.attrs\n  let index = -1\n\n  while (++index < attrs.length) {\n    if (!handle(attrs[index], element, find(schema, attrs[index].name))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check whether an attribute exists.\n *\n * `[attr]`\n *\n * @param {RuleAttr} _\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exists(_, element, info) {\n  return hasProperty(element, info.property)\n}\n\n/**\n * Check whether an attribute has an exact value.\n *\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exact(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      normalizeValue(element.properties[info.property], info) === query.value\n  )\n}\n\n/**\n * Check whether an attribute, interpreted as a space-separated list, contains\n * a value.\n *\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction spaceSeparatedList(query, element, info) {\n  const value = element.properties && element.properties[info.property]\n\n  return (\n    // If this is a space-separated list, and the query is contained in it, return\n    // true.\n    (!info.commaSeparated &&\n      value &&\n      typeof value === 'object' &&\n      query.value &&\n      value.includes(query.value)) ||\n    // For all other values (including comma-separated lists), return whether this\n    // is an exact match.\n    (hasProperty(element, info.property) &&\n      normalizeValue(value, info) === query.value)\n  )\n}\n\n/**\n * Check whether an attribute has a substring as either the exact value or a\n * prefix.\n *\n * `[attr|=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exactOrPrefix(query, element, info) {\n  const value = normalizeValue(\n    element.properties && element.properties[info.property],\n    info\n  )\n\n  return Boolean(\n    hasProperty(element, info.property) &&\n      query.value &&\n      (value === query.value ||\n        (value.slice(0, query.value.length) === query.value &&\n          value.charAt(query.value.length) === '-'))\n  )\n}\n\n/**\n * Check whether an attribute has a substring as its start.\n *\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction begins(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        0,\n        query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * Check whether an attribute has a substring as its end.\n *\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction ends(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        -query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * Check whether an attribute contains a substring.\n *\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction contains(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).includes(\n        query.value\n      )\n  )\n}\n\n// Shouldn’t be called, Parser throws an error instead.\n/**\n * @param {unknown} query\n * @returns {never}\n */\n/* c8 ignore next 4 */\nfunction unknownOperator(query) {\n  // @ts-expect-error: `operator` guaranteed.\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n\n/**\n * Stringify a hast value back to its HTML form.\n *\n * @param {PropertyValue} value\n * @param {Info} info\n * @returns {string}\n */\nfunction normalizeValue(value, info) {\n  if (typeof value === 'boolean') {\n    return info.attribute\n  }\n\n  if (Array.isArray(value)) {\n    return (info.commaSeparated ? commas : spaces)(value)\n  }\n\n  return String(value)\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n",null,null,null,"/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').ElementChild} ElementChild\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {queryToSelectors, walk} from './walk.js'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: Rule | RulePseudo, element: Element, index: number | undefined, parent: Parent | undefined, state: SelectState) => boolean} */\nconst handle = zwitch('name', {\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    any: matches,\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    matches,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-of-type': nthOfType,\n    'nth-last-of-type': nthLastOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'any',\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'matches',\n  'not',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * Check whether an element matches pseudo selectors.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, element, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], element, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      element.properties &&\n        (element.properties.type === 'checkbox' ||\n          element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction dir(query, _1, _2, _3, state) {\n  return state.direction === query.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction has(query, element, _1, _2, state) {\n  /** @type {SelectState} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // Do walk deep.\n    shallow: false,\n    // One result is enough.\n    one: true,\n    scopeElements: [element],\n    results: [],\n    rootQuery: queryToSelectors(query.value)\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lang(query, _1, _2, _3, state) {\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    // @ts-expect-error never `selectors`.\n    extendedFilter(state.language, commas(query.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element `:matches` further selectors.\n *\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} _\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, element, _, parent, state) {\n  /** @type {SelectState} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // Do walk deep.\n    shallow: false,\n    // One result is enough.\n    one: true,\n    scopeElements: [element],\n    results: [],\n    rootQuery: queryToSelectors(query.value)\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, element, index, parent, state) {\n  return !matches(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      fn(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    fn(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction root(_, element, _1, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_, element, _1, _2, state) {\n  return state.scopeElements.includes(element)\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {unknown} query\n * @returns {never}\n */\nfunction unknownPseudo(query) {\n  // @ts-expect-error: indexable.\n  if (query.name) {\n    // @ts-expect-error: indexable.\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n * @param {(child: ElementChild) => boolean} check\n * @returns {boolean}\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudo} query\n * @returns {(value: number) => boolean}\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let fn = query._cachedFn\n\n  if (!fn) {\n    // @ts-expect-error: always string.\n    fn = nthCheck(query.value)\n    // @ts-expect-error: cache.\n    query._cachedFn = fn\n  }\n\n  return fn\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, element, index, parent, state) {\n  return Boolean(\n    (!query.tagName || name(query, element)) &&\n      (!query.classNames || className(query, element)) &&\n      (!query.id || id(query, element)) &&\n      (!query.attrs || attribute(query, element, state.schema)) &&\n      (!query.pseudos || pseudo(query, element, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has all class names.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {readonly string[]} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has an ID.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function id(query, element) {\n  return Boolean(element.properties && element.properties.id === query.id)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Selectors} Selectors\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<RuleSet> | undefined} descendant\n *   `a b`\n * @property {Array<RuleSet> | undefined} directChild\n *   `a > b`\n * @property {Array<RuleSet> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<RuleSet> | undefined} generalSibling\n *   `a ~ b`\n *\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Turn a query into a uniform object.\n *\n * @param {Selectors | RuleSet | null} query\n * @returns {Selectors}\n */\nexport function queryToSelectors(query) {\n  if (query === null) {\n    return {type: 'selectors', selectors: []}\n  }\n\n  if (query.type === 'ruleSet') {\n    return {type: 'selectors', selectors: [query]}\n  }\n\n  return query\n}\n\n/**\n * Walk a tree.\n *\n * @param {SelectState} state\n * @param {Node | undefined} tree\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {SelectState} state\n * @param {Array<RuleSet>} currentRules\n * @param {Node} node\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @returns {Nest}\n */\nfunction one(state, currentRules, node, index, parent) {\n  /** @type {Nest} */\n  let nestResult = {\n    directChild: undefined,\n    descendant: undefined,\n    adjacentSibling: undefined,\n    generalSibling: undefined\n  }\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, state.rootQuery.selectors),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node)\n  }\n\n  exit()\n\n  return nestResult\n}\n\n/**\n * Check a node.\n *\n * @param {SelectState} state\n * @param {Nest} nest\n * @param {Parent} node\n * @returns {void}\n */\nfunction all(state, nest, node) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<RuleSet> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(state, forSibling, node.children[index], index, node)\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {SelectState} state\n *   Current state.\n * @param {Array<RuleSet>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of node in parent.\n * @param {Parent | undefined} parent\n *   Parent of node.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    directChild: undefined,\n    descendant: undefined,\n    adjacentSibling: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const ruleSet = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && ruleSet.rule.rule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(ruleSet.rule, node, index, parent, state)) {\n      const nest = ruleSet.rule.rule\n\n      // Are there more?\n      if (nest) {\n        /** @type {RuleSet} */\n        const rule = {type: 'ruleSet', rule: nest}\n        /** @type {keyof Nest} */\n        const label =\n          nest.nestingOperator === '+'\n            ? 'adjacentSibling'\n            : nest.nestingOperator === '~'\n            ? 'generalSibling'\n            : nest.nestingOperator === '>'\n            ? 'directChild'\n            : 'descendant'\n        add(nestResult, label, rule)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (ruleSet.rule.nestingOperator === null) {\n      add(nestResult, 'descendant', ruleSet)\n    }\n    // Adjacent.\n    else if (ruleSet.rule.nestingOperator === '~') {\n      add(nestResult, 'generalSibling', ruleSet)\n    }\n    // Drop top-level nesting (`undefined`), direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<RuleSet> | undefined} left\n * @param {Array<RuleSet> | undefined} right\n * @returns {Array<RuleSet>}\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n    ? left\n    : right && right.length > 0\n    ? right\n    : empty\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n * @param {keyof Nest} field\n * @param {RuleSet} rule\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Node} node\n *   Node (we’re looking for elements).\n * @returns {void}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n","/**\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\n\nconst parser = new CssSelectorParser()\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selectors | RuleSet | null}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return parser.parse(selector)\n}\n","/**\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Space} Space\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {html, svg} from 'property-information'\nimport {queryToSelectors, walk} from './walk.js'\nimport {parse} from './parse.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [node]\n *   Node that might match `selector`, should be an element.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {Element | null}\n *   First element in `tree` that matches `selector` or `null` if nothing is\n *   found.\n *   This could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  // To do in major: return `undefined` instead.\n  return state.results[0] || null\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   Tree to search.\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {SelectState} SelectState\n */\nfunction createState(selector, tree, space) {\n  return {\n    // State of the query.\n    rootQuery: queryToSelectors(parse(selector)),\n    results: [],\n    // @ts-expect-error assume elements.\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    one: false,\n    shallow: false,\n    found: false,\n    // State in the tree.\n    schema: space === 'svg' ? svg : html,\n    language: undefined,\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    typeIndex: undefined,\n    elementIndex: undefined,\n    typeCount: undefined,\n    elementCount: undefined\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index: number | null, parent: Root | Element | null): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","import { Element } from 'hast';\n\nexport const octiconLink: Element = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true',\n  },\n  children: [\n    {\n      type: 'element',\n      tagName: 'path',\n      children: [],\n      properties: {\n        fillRule: 'evenodd',\n        d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z',\n      },\n    },\n  ],\n};\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport interface ReservedMetaOptions {}\n\nexport const reservedMeta: Plugin<[ReservedMetaOptions?], Root> = (options = {}) => {\n  return (tree) => {\n    visit(tree, (node: Root | RootContent) => {\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\n        node.properties = { ...node.properties, 'data-meta': String(node.data.meta) };\n      }\n    });\n  };\n};\n","import React, { useImperativeHandle } from 'react';\nimport ReactMarkdown, { Options } from 'react-markdown';\nimport { Element } from 'hast';\nimport { PluggableList } from 'unified';\nimport gfm from 'remark-gfm';\nimport raw from 'rehype-raw';\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypeIgnore from 'rehype-ignore';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite, { getCodeString, RehypeRewriteOptions } from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nimport { useCopied } from './plugins/useCopied';\nimport './styles/markdown.less';\n\nimport { reservedMeta } from './plugins/reservedMeta';\n\nexport interface MarkdownPreviewProps extends Omit<Options, 'children'> {\n  prefixCls?: string;\n  className?: string;\n  source?: string;\n  disableCopy?: boolean;\n  style?: React.CSSProperties;\n  pluginsFilter?: (type: 'rehype' | 'remark', plugin: PluggableList) => PluggableList;\n  wrapperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    'data-color-mode'?: 'light' | 'dark';\n  };\n  /**\n   * Please use wrapperElement, Will be removed in v5 release.\n   * @deprecated\n   */\n  warpperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    'data-color-mode'?: 'light' | 'dark';\n  };\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  rehypeRewrite?: RehypeRewriteOptions['rewrite'];\n}\n\nexport interface MarkdownPreviewRef extends MarkdownPreviewProps {\n  mdp: React.RefObject<HTMLDivElement>;\n}\n\nexport default React.forwardRef<MarkdownPreviewRef, MarkdownPreviewProps>((props, ref) => {\n  const {\n    prefixCls = 'wmde-markdown wmde-markdown-color',\n    className,\n    source,\n    style,\n    disableCopy = false,\n    skipHtml = true,\n    onScroll,\n    onMouseOver,\n    pluginsFilter,\n    rehypeRewrite: rewrite,\n    wrapperElement = {},\n    warpperElement = {},\n    ...other\n  } = props;\n  const mdp = React.useRef<HTMLDivElement>(null);\n  useImperativeHandle(ref, () => ({ ...props, mdp }), [mdp, props]);\n  const cls = `${prefixCls || ''} ${className || ''}`;\n  useCopied(mdp);\n\n  const rehypeRewriteHandle: RehypeRewriteOptions['rewrite'] = (node, index, parent) => {\n    if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n      const child = node.children && (node.children[0] as Element);\n      if (child && child.properties && child.properties.ariaHidden === 'true') {\n        child.properties = { class: 'anchor', ...child.properties };\n        child.children = [octiconLink];\n      }\n    }\n    if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\n      const code = getCodeString(node.children);\n      node.children.push(copyElement(code));\n    }\n    rewrite && rewrite(node, index, parent);\n  };\n\n  const rehypePlugins: PluggableList = [\n    reservedMeta,\n    [rehypePrism, { ignoreMissing: true }],\n    slug,\n    headings,\n    rehypeIgnore,\n    [rehypeRewrite, { rewrite: rehypeRewriteHandle }],\n    [rehypeAttrs, { properties: 'attr' }],\n    ...(other.rehypePlugins || []),\n  ];\n  const customProps: MarkdownPreviewProps = {\n    allowElement: (element, index, parent) => {\n      if (other.allowElement) {\n        return other.allowElement(element, index, parent);\n      }\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\n    },\n  };\n  if (skipHtml) {\n    rehypePlugins.push(raw);\n  }\n  const remarkPlugins = [...(other.remarkPlugins || []), gfm];\n  const wrapperProps = { ...warpperElement, ...wrapperElement };\n  return (\n    <div ref={mdp} onScroll={onScroll} onMouseOver={onMouseOver} {...wrapperProps} className={cls} style={style}>\n      <ReactMarkdown\n        {...customProps}\n        {...other}\n        skipHtml={skipHtml}\n        rehypePlugins={pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins}\n        remarkPlugins={pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins}\n        children={source || ''}\n      />\n    </div>\n  );\n});\n","import copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { useCallback, useEffect } from 'react';\n\nexport function useCopied(container: React.RefObject<HTMLDivElement>) {\n  const handle = useCallback((event: Event) => {\n    const target = (event.currentTarget || event.target) as HTMLDivElement;\n    target.classList.add('active');\n    copyTextToClipboard(target.dataset.code as string, function () {\n      setTimeout(() => {\n        target.classList.remove('active');\n      }, 2000);\n    });\n  }, []);\n  useEffect(() => {\n    const btns = container.current?.querySelectorAll('pre code + div.copied');\n    btns && Array.from(btns).forEach((elm) => elm.addEventListener('click', handle, false));\n    return () => {\n      btns && Array.from(btns).forEach((elm) => elm.removeEventListener('click', handle, false));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container]);\n}\n","import { Element } from 'hast';\n\nexport function copyElement(str: string = ''): Element {\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      class: 'copied',\n      'data-code': str,\n    },\n    children: [\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-copy',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z',\n            },\n            children: [],\n          },\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z',\n            },\n            children: [],\n          },\n        ],\n      },\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-check',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z',\n            },\n            children: [],\n          },\n        ],\n      },\n    ],\n  };\n}\n","var _rect, _g, _path, _path2, _path3, _path4, _path5, _path6, _path7, _g2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 198,\n    height: 58,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    rx: 8,\n    x: 140,\n    width: 55,\n    height: 58\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"#195adc\",\n    strokeWidth: 8\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M135.5 54a8 8 0 0 0 8.5 -8.5\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 4,\n    rx: 8,\n    width: 190,\n    height: 50,\n    fill: \"none\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m23.906 33.641c.953-.083 1.906-.167 2.859-.25.108 2.099 1.511 4.139 3.578 4.722 2.438.895 5.357.799 7.559-.658 1.49-1.129 1.861-3.674.324-4.925-1.557-1.322-3.685-1.504-5.576-2.057-2.343-.565-4.912-1.133-6.611-2.979-1.805-2.088-1.627-5.485.292-7.443 2.041-2.113 5.222-2.55 8.02-2.274 2.46.244 5.058 1.343 6.252 3.635.426.908 1.095 2.241.656 3.108-.888.173-1.81.148-2.715.245-.077-2.084-1.727-4.073-3.863-4.234-1.902-.317-4.02-.252-5.691.802-1.398.989-1.849 3.363-.381 4.494 1.281 1.01 2.962 1.199 4.482 1.642 2.66.627 5.602 1.118 7.596 3.158 2 2.188 1.893 5.84-.088 8.01-2.01 2.32-5.304 2.972-8.237 2.713-2.585-.147-5.319-1.024-6.916-3.184-.987-1.288-1.517-2.905-1.542-4.523\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m45.953 41c0-7.635 0-15.271 0-22.906.938 0 1.875 0 2.813 0 0 2.74 0 5.479 0 8.219 1.391-1.721 3.69-2.523 5.86-2.236 1.975.154 4.03 1.371 4.513 3.402.504 1.973.278 4.02.33 6.04 0 2.495 0 4.989 0 7.484-.938 0-1.875 0-2.813 0-.009-3.675.018-7.351-.014-11.03-.026-1.342-.627-2.835-2-3.282-2.187-.802-5.077.393-5.609 2.773-.417 1.764-.216 3.586-.264 5.381 0 2.051 0 4.102 0 6.153-.938 0-1.875 0-2.813 0\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m63.781 21.328v-3.234h2.813v3.234zm0 19.672v-16.594h2.813v16.594z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m82.25 35.656c.969.12 1.938.24 2.906.359-.702 3.464-4.348 5.767-7.781 5.386-3.235-.066-6.43-2.328-7.06-5.598-.843-3.307-.404-7.285 2.101-9.784 3.082-3 8.699-2.618 11.235.892 1.374 1.85 1.676 4.267 1.578 6.51-4.125 0-8.25 0-12.375 0-.142 2.889 2.267 6 5.346 5.658 1.881-.162 3.613-1.566 4.045-3.423m-9.234-4.547c3.089 0 6.177 0 9.266 0 .129-2.774-2.616-5.422-5.419-4.713-2.174.427-3.912 2.474-3.846 4.713\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m88.64 41v-22.906h2.813v22.906z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m106.59 41c0-.698 0-1.396 0-2.094-1.412 2.442-4.776 3.067-7.233 1.949-2.378-1.02-3.971-3.403-4.345-5.924-.507-2.761-.123-5.768 1.389-8.167 1.863-2.705 5.968-3.642 8.711-1.741.422.228 1.028 1.144 1.294 1.018-.006-2.649-.0001-5.298-.003-7.948.932 0 1.865 0 2.797 0 0 7.635 0 15.271 0 22.906-.87 0-1.74 0-2.61 0m-8.89-8.281c-.075 2.246.637 4.861 2.79 5.952 2 1.023 4.682-.047 5.488-2.134.897-1.996.746-4.278.388-6.382-.425-1.95-2.046-3.804-4.158-3.805-1.903-.065-3.633 1.363-4.099 3.181-.327 1.028-.394 2.116-.408 3.188\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m112.52 36.05c.927-.146 1.854-.292 2.781-.438.126 1.69 1.513 3.244 3.239 3.365 1.398.212 3.01.12 4.12-.851.807-.749 1.1-2.243.159-3.01-.908-.723-2.115-.812-3.182-1.172-1.797-.485-3.713-.848-5.243-1.97-1.83-1.551-1.868-4.679-.099-6.293 1.577-1.507 3.918-1.784 6-1.594 1.685.176 3.54.749 4.535 2.217.464.715.708 1.549.844 2.384-.917.125-1.833.25-2.75.375-.121-1.569-1.653-2.762-3.19-2.695-1.246-.082-2.702.012-3.608.982-.624.724-.543 1.971.314 2.481.998.706 2.269.757 3.389 1.173 1.754.512 3.647.848 5.141 1.965 1.686 1.476 1.728 4.244.396 5.966-1.298 1.788-3.597 2.417-5.709 2.448-1.466-.007-2.984-.214-4.299-.893-1.599-.909-2.585-2.655-2.84-4.444\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#fff\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m151.11 41v-22.906h3.03v22.906z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m158.55 29.844c-.277-4.765 2.335-9.977 7.05-11.551 4.902-1.757 11.226.197 13.477 5.098 2.266 4.706 1.89 10.92-1.767 14.833-4.554 4.948-13.81 3.976-17.08-1.954-1.111-1.946-1.679-4.188-1.68-6.426m3.125.047c-.377 4.273 2.892 8.844 7.375 8.951 3.791.221 7.557-2.653 7.997-6.497.794-3.731.139-8.292-3.107-10.696-3.788-2.814-10.05-1.104-11.591 3.444-.54 1.539-.642 3.181-.675 4.798\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.105c84b79638a52626faa3d87261b0b8.svg\";\nexport { ForwardRef as ReactComponent };","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Component } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default class Container extends Component {\n  render() {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: React.Children.toArray(this.props.children).map(child => {\n        if (! /*#__PURE__*/React.isValidElement(child)) return null;\n        return /*#__PURE__*/React.cloneElement(child, _extends({}, this.props, child.props));\n      })\n    });\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Component } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default class Base extends Component {\n  constructor(props, defaultState, forceState) {\n    super(props);\n    this.getUrl = () => '';\n    this.state = Object.assign({}, _extends({}, defaultState, props), forceState);\n  }\n  render() {\n    var {\n      href\n    } = this.state;\n    if (href) {\n      return /*#__PURE__*/_jsxs(\"a\", {\n        href: href,\n        children: [\" \", /*#__PURE__*/_jsx(\"img\", {\n          alt: \"\",\n          src: this.getUrl()\n        }), \" \"]\n      });\n    }\n    return /*#__PURE__*/_jsx(\"img\", {\n      alt: \"\",\n      src: this.getUrl()\n    });\n  }\n}\nBase.defaultProps = {\n  platform: 'github',\n  base: 'https://img.shields.io'\n};","import Base from '../common/Base';\nexport default class Issue extends Base {\n  constructor(props) {\n    super(props, {\n      platform: 'github',\n      type: 'issues'\n    });\n    this.getUrl = () => {\n      var {\n        type,\n        platform,\n        property,\n        user,\n        repo,\n        label,\n        base\n      } = this.state;\n      if (platform !== 'github') return '';\n      if (type === 'issues' || /^issues-(raw|closed|closed-raw|pr|pr-raw|pr-closed|pr-closed-raw)/.test(type)) {\n        if (label && (type === 'issues' || /^issues-(raw|pr|pr-raw)/.test(type || ''))) {\n          return [base, platform, type, user, repo, label].join('/');\n        }\n        return [base, platform, type, user, repo].join('/');\n      }\n      if (type === 'issueKind') {\n        return [base, platform, type, 'detail', property, user, repo].join('/');\n      }\n      return '';\n    };\n  }\n}","import Base from '../common/Base';\nexport default class Size extends Base {\n  constructor(props) {\n    super(props, {\n      platform: 'github',\n      type: 'languages'\n    });\n    this.getUrl = () => {\n      var {\n        type,\n        platform,\n        user,\n        repo,\n        base,\n        path\n      } = this.state;\n      if (platform !== 'github') return '';\n      /**\n       * /github/languages/code-size/:user/:repo\n       */\n      if (type === 'languages') {\n        return [base, platform, type, 'code-size', user, repo].join('/');\n      }\n      /**\n       * /github/repo-size/:user/:repo\n       */\n      if (type === 'repo-size') {\n        return [base, platform, type, user, repo].join('/');\n      }\n      /**\n       * /github/size/:user/:repo/:path*\n       */\n      if (type === 'size' && path) {\n        return [base, platform, type, user, repo, path].join('/');\n      }\n      return '';\n    };\n  }\n}","import Base from '../common/Base';\nexport default class Activity extends Base {\n  constructor(props) {\n    super(props, {\n      platform: 'github',\n      type: 'downloads',\n      total: true\n    });\n    this.getUrl = () => {\n      var {\n        type,\n        platform,\n        user,\n        repo,\n        base,\n        tag,\n        path,\n        total\n      } = this.state;\n      if (platform !== 'github' || !/^(downloads|downloads-pre)/.test(type || '')) return '';\n      var baseData = [base, platform, type, user, repo];\n      if (path && tag) {\n        return [...baseData, tag, path].join('/');\n      }\n      if (total && tag || type === 'downloads-pre' && tag && total) {\n        return [...baseData, tag, 'total'].join('/');\n      }\n      if (total) {\n        return [...baseData, 'total'].join('/');\n      }\n      return '';\n    };\n  }\n}","import Base from '../common/Base';\nexport default class Activity extends Base {\n  constructor(props) {\n    super(props, {\n      platform: 'github',\n      type: 'commits-since'\n    });\n    this.getUrl = () => {\n      var {\n        type,\n        platform,\n        user,\n        repo,\n        base,\n        interval,\n        variant,\n        version,\n        branch\n      } = this.state;\n      if (platform !== 'github') return '';\n      if (type === 'commits-since' && version && branch) {\n        return [base, platform, type, user, repo, version, branch].join('/');\n      }\n      if (type === 'commit-activity' && interval) {\n        return [base, platform, type, interval, user, repo].join('/');\n      }\n      if (type === 'variant' && variant) {\n        return [base, platform, type, variant, user, repo].join('/');\n      }\n      if (type === 'last-commit') {\n        return branch ? [base, platform, type, user, repo, branch].join('/') : [base, platform, type, user, repo].join('/');\n      }\n      if (type && /^release-(date|date-pre)/.test(type)) {\n        return [base, platform, type, user, repo].join('/');\n      }\n      return '';\n    };\n  }\n}","import Base from '../common/Base';\nexport default class Version extends Base {\n  constructor(props) {\n    super(props, {\n      platform: 'github',\n      type: 'version-release'\n    });\n    this.getUrl = () => {\n      var {\n        type,\n        platform,\n        user,\n        repo,\n        base,\n        branch\n      } = this.state;\n      var typePath = '';\n      switch (type) {\n        case 'version-release':\n          typePath = 'v/release';\n          break;\n        case 'version-tag':\n          typePath = 'v/tag';\n          break;\n        case 'package-json':\n          typePath = 'package-json/v';\n          break;\n        case 'manifest-json':\n          typePath = 'manifest-json/v';\n          break;\n        case 'go-mod':\n          typePath = 'go-mod/go-version';\n          break;\n        default:\n          break;\n      }\n      if (platform !== 'github' || !typePath) return '';\n      var baseData = [base, platform, typePath, user, repo];\n      if (/(go-mod|manifest-json|package-json)/.test(type || '') && branch) {\n        return [...baseData, branch].join('/');\n      }\n      return baseData.join('/');\n    };\n  }\n}","import Base from '../common/Base';\nexport default class License extends Base {\n  constructor(props) {\n    super(props, {\n      platform: 'github',\n      type: 'license'\n    });\n    this.getUrl = () => {\n      var {\n        type,\n        platform,\n        user,\n        repo,\n        base\n      } = this.state;\n      if (platform !== 'github') return '';\n      return [base, platform, type, user, repo].join('/');\n    };\n  }\n}","import Base from '../common/Base';\nexport default class Analysis extends Base {\n  constructor(props) {\n    super(props, {\n      platform: 'github',\n      type: 'languages-count'\n    });\n    this.getUrl = () => {\n      var {\n        base,\n        platform,\n        type,\n        user,\n        repo,\n        query\n      } = this.state;\n      var typePath = '';\n      switch (type) {\n        case 'languages-count':\n          typePath = 'languages/count';\n          break;\n        case 'languages-top':\n          typePath = 'languages/top';\n          break;\n        case 'search':\n          typePath = 'search';\n          break;\n        default:\n          break;\n      }\n      if (platform !== 'github' || !typePath) return '';\n      var baseData = [base, platform, typePath, user, repo];\n      if (query) {\n        return [...baseData, query].join('/');\n      }\n      return baseData.join('/');\n    };\n  }\n}","import Base from '../common/Base';\nexport default class Social extends Base {\n  constructor(props) {\n    super(props, {\n      platform: 'github',\n      type: 'followers'\n    });\n    this.getUrl = () => {\n      var {\n        type,\n        platform,\n        user,\n        repo,\n        base\n      } = this.state;\n      if (platform !== 'github') return '';\n      if (type === 'followers') return [base, platform, type, user].join('/');\n      return [base, platform, type, user, repo].join('/');\n    };\n  }\n}","import Container from '../common/Container';\nimport Issues from './Issues';\nimport Size from './Size';\nimport Downloads from './Downloads';\nimport Activity from './Activity';\nimport Version from './Version';\nimport License from './License';\nimport Analysis from './Analysis';\nimport Social from './Social';\nexport default class Github extends Container {}\nGithub.Issues = Issues;\nGithub.Size = Size;\nGithub.Activity = Activity;\nGithub.Downloads = Downloads;\nGithub.Version = Version;\nGithub.License = License;\nGithub.Analysis = Analysis;\nGithub.Social = Social;","import Github from './Github';\nexport default Github;","import Base from '../common/Base';\nexport default class Coverages extends Base {\n  constructor(props) {\n    super(props, {\n      type: 'github'\n    }, {\n      platform: 'coveralls'\n    });\n    this.getUrl = () => {\n      var {\n        type,\n        platform,\n        user,\n        repo,\n        base\n      } = this.state;\n      if (platform !== 'coveralls') return '';\n      return [base, platform, type, user, repo].join('/');\n    };\n  }\n}","import Base from '../common/Base';\nexport default class Codacy extends Base {\n  constructor(props) {\n    super(props, {}, {\n      platform: 'coveralls'\n    });\n    this.getUrl = () => {\n      var {\n        base,\n        platform,\n        projectId,\n        branch\n      } = this.state;\n      if (platform !== 'coveralls') return '';\n      if (branch) return [base, platform, projectId, branch].join('/');\n      return [base, 'codacy/coverage', projectId].join('/');\n    };\n  }\n}","import Container from '../common/Container';\nimport Coverages from './Coverages';\nimport Codacy from './Codacy';\nexport default class Coverage extends Container {}\nCoverage.Coverages = Coverages;\nCoverage.Codacy = Codacy;","import Coverage from './Coverage';\nexport default Coverage;","import Base from '../common/Base';\n\n/**\n * NPM Version\n * \n * `/npm/v/:packageName`  \n * npm:  npm badge \n * \n * `/npm/v/:scope/:packageName`  \n * npm (scoped): npm (scoped) badge  \n * \n * `/npm/v/:packageName/:tag`  \n * npm (tag):  npm (tag) badge \n * \n * `/npm/v/:packageName/:tag?registry_uri=https%3A%2F%2Fregistry.npmjs.com`  \n * npm (custom registry):  npm (custom registry) badge \n * \n * `/npm/v/:scope/:packageName/:tag`  \n * npm (scoped with tag):  npm (scoped with tag) badge \n * \n * `/npm/dependency-version/:packageName/peer/:dependency`\n * npm peer dependency version:  npm peer dependency version badge \n * \n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm peer dependency version (scoped): npm peer dependency version (scoped) badge  \n * \n * `/npm/dependency-version/:packageName/dev/:dependency`\n * npm dev dependency version: npm dev dependency version badge  \n * \n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm dev dependency version (scoped):  npm dev dependency version (scoped) badge \n * \n * `/npm/dependency-version/:packageName/:dependency`\n * npm (prod) dependency version:  npm (prod) dependency version badge \n * \n * `/npm/dependency-version/:scope?/:packageName/:dependencyScope?/:dependency`\n * npm (prod) dependency version (scoped): npm (prod) dependency version (scoped) badge  \n * \n * `/npm/types/:packageName`\n * npm type definitions: npm type definitions badge  \n */\n\nexport default class Version extends Base {\n  constructor(props) {\n    super(props, {\n      type: 'version'\n    }, {\n      platform: 'npm'\n    });\n    this.getUrl = () => {\n      var {\n        base,\n        platform,\n        type,\n        scope,\n        packageName,\n        dependency,\n        dependencyScope,\n        version,\n        registryUri\n      } = this.state;\n      if (platform !== 'npm' || !packageName) return '';\n      var url = '';\n      var baseData = [base, platform];\n      if (type === 'version' && packageName) {\n        baseData.push('v');\n        if (scope) {\n          baseData.push(scope);\n        }\n        baseData.push(packageName);\n        if (version) {\n          baseData.push(version);\n        }\n        url = baseData.join('/');\n        if (registryUri) {\n          url = url + \"?registry_uri=\" + registryUri;\n        }\n      } else if (type === 'peer-dependency' && packageName && dependency) {\n        baseData.push('dependency-version');\n        if (scope) {\n          baseData.push(scope);\n        }\n        url = [...baseData, packageName, 'peer', dependency].join('/');\n      } else if (type === 'dev-dependency' && packageName && dependency) {\n        baseData.push('dependency-version');\n        if (scope) {\n          baseData.push(scope);\n        }\n        baseData.concat([packageName, 'dev']);\n        if (dependencyScope) {\n          baseData.push(dependencyScope);\n        }\n        baseData.push(dependency);\n        url = baseData.join('/');\n      } else if (packageName && dependency) {\n        baseData.concat([packageName, dependency]);\n        url = baseData.join('/');\n      }\n      return url;\n    };\n  }\n}","import Base from '../common/Base';\n/**\n * Npm Size\n * \n * `/bundlephobia/:format/:packageName`\n * npm bundle size:  npm bundle size badge \n * \n * `/bundlephobia/:format/:scope/:packageName`\n * npm bundle size (scoped): npm bundle size (scoped) badge  \n * \n * `/bundlephobia/:format/:packageName/:version`\n * npm bundle size (version):  npm bundle size (version) badge \n * \n * `/bundlephobia/:format/:scope/:packageName/:version`\n * npm bundle size (scoped version): npm bundle size (scoped version) badge  \n * \n */\nexport default class Size extends Base {\n  constructor(props) {\n    super(props, {\n      format: 'min'\n    }, {\n      platform: 'npm'\n    });\n    this.getUrl = () => {\n      var {\n        base,\n        platform,\n        format,\n        packageName,\n        scope,\n        version\n      } = this.state;\n      if (platform !== 'npm') return '';\n      var baseData = [base, 'bundlephobia'];\n      var url = '';\n      if (packageName && format) {\n        url = [...baseData, format, packageName].join('/');\n      }\n      if (packageName && format && scope) {\n        url = [...baseData, format, scope, packageName].join('/');\n      }\n      if (packageName && format && scope && version) {\n        url = [...baseData, format, scope, packageName, version].join('/');\n      }\n      if (packageName && format && version) {\n        url = [...baseData, format, packageName, version].join('/');\n      }\n      return url;\n    };\n  }\n}","import Container from '../common/Container';\nimport Version from './Version';\nimport Size from './Size';\nexport default class Npm extends Container {}\nNpm.Version = Version;\nNpm.Size = Size;","import Npm from './Npm';\nexport default Npm;","import React from 'react';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport '@wcj/dark-mode';\nimport './App.css';\nimport logo from './logo.svg';\nimport MDStr from '../README.md';\nimport { Github, Coverage, Npm } from '../';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <dark-mode light=\"Light\" dark=\"Dark\" style={{ position: 'fixed', top: 8, left: 10 }}></dark-mode>\n      <GitHubCorners href=\"https://github.com/uiwjs/react-shields\" />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"App-list\">\n          <div className=\"title\">Github Social</div>\n          <Github.Social user=\"jaywcjlove\" repo=\"uiw\" href=\"https://github.com/jaywcjlove\" />\n          <Github user=\"jaywcjlove\" repo=\"awesome-mac\">\n            <Github.Social type=\"forks\" />\n            <Github.Social type=\"stars\" />\n            <Github.Social type=\"watchers\" />\n            <Github.Social type=\"followers\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Npm Version</div>\n          <Npm.Version scope=\"@uiw\" packageName=\"react-shields\" />\n          <Npm>\n            <Npm.Version scope=\"@uiw\" packageName=\"react-github-corners\" />\n            <Npm.Version packageName=\"hotkeys-js\" />\n            <Npm.Version packageName=\"kkt\" version=\"latest\" />\n            <Npm.Version packageName=\"tsbb\" />\n            <Npm.Version scope=\"@uiw\" type=\"peer-dependency\" dependency=\"react\"  packageName=\"react-github-corners\" />\n          </Npm>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Npm Size</div>\n          <Npm.Size scope=\"@uiw\" packageName=\"react-shields\" />\n          <Npm>\n            <Npm.Size format=\"minzip\" scope=\"@uiw\" packageName=\"react-github-corners\" />\n            <Npm.Size packageName=\"hotkeys-js\" />\n            <Npm.Size packageName=\"kkt\" version=\"5.0.0-alpha.12\" />\n          </Npm>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Issue</div>\n          <Github.Issues user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Issues href=\"https://github.com/uiwjs/react-shields\" type=\"issues\" />\n            <Github.Issues type=\"issues-raw\" />\n            <Github.Issues type=\"issues-closed\" />\n            <Github.Issues type=\"issues-closed-raw\" />\n            <Github.Issues type=\"issues-pr\" />\n            <Github.Issues type=\"issues-pr-raw\" />\n            <Github.Issues type=\"issues-pr-closed\" />\n            <Github.Issues type=\"issues-pr-closed-raw\" />\n            <Github.Issues type=\"issues\" label=\"bug\" />\n            <Github.Issues type=\"issues-raw\" label=\"bug\" />\n            <Github.Issues type=\"issues-pr\" label=\"bug\" />\n            <Github.Issues type=\"issues-pr-raw\" label=\"bug\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Downloads</div>\n          <Github.Downloads user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Downloads tag=\"v3.9.0\" total={false}/>\n            <Github.Downloads user=\"jaywcjlove\" repo=\"linux-command\" type=\"downloads-pre\" tag=\"v1.2.2\" path=\"linux-command.docset.zip\" />\n            <Github.Downloads tag=\"v3.9.0\"/>\n            <Github.Downloads tag=\"v3.9.0\"/>\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Activity</div>\n          <Github.Activity user=\"uiwjs\" repo=\"uiw\" type=\"commit-activity\" interval=\"y\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Activity type=\"last-commit\" />\n            <Github.Activity type=\"last-commit\" branch=\"gh-pages\" />\n            <Github.Activity type=\"release-date\" />\n            <Github.Activity type=\"release-date-pre\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Size</div>\n          <Github.Size user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Size />\n            <Github.Size type=\"repo-size\" />\n            <Github.Size type=\"size\" path=\"src/index.ts\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Version</div>\n          <Github.Version user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Version type=\"version-tag\" />\n            <Github.Version type=\"package-json\" />\n            <Github.Version type=\"package-json\" branch=\"dev\" />\n            <Github.Version user=\"jaywcjlove\" repo=\"wxmp\" type=\"manifest-json\" />\n            <Github.Version user=\"jaywcjlove\" repo=\"wxmp\" type=\"manifest-json\" branch=\"master\" />\n            <Github.Version user=\"x-mod\" repo=\"routine\" type=\"go-mod\" />\n            <Github.Version user=\"x-mod\" repo=\"routine\" type=\"go-mod\" branch=\"master\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github License</div>\n          <Github.License user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.License />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Analysis</div>\n          <Github.Analysis user=\"uiwjs\" repo=\"uiw\" />\n          <Github user=\"uiwjs\" repo=\"uiw\">\n            <Github.Analysis type=\"languages-top\" />\n            <Github.Analysis type=\"search\" query=\"github\" />\n          </Github>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Github Coverages</div>\n          <Coverage.Coverages user=\"jaywcjlove\" repo=\"hotkeys\" />\n          <Coverage user=\"jaywcjlove\" repo=\"hotkeys\">\n            <Coverage.Coverages type=\"github\"  />\n            <Coverage.Coverages type=\"github\" />\n          </Coverage>\n        </div>\n        <div className=\"App-list\">\n          <div className=\"title\">Codacy Coverages</div>\n          <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" />\n          <Coverage user=\"jaywcjlove\" repo=\"hotkeys\">\n            <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" branch=\"master\" />\n            <Coverage.Codacy projectId=\"1c524e61cd8640e79b80d406eda8754b\" />\n          </Coverage>\n        </div>\n      </header>\n      <div className=\"info\">\n        <MarkdownPreview className=\"App-markdown\" source={MDStr.replace(/([\\s\\S]*)<!--dividing-->/, '')} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default \"react-shields\\n===\\n\\n[![Build & Deploy](https://github.com/uiwjs/react-shields/workflows/Build%20&%20Deploy/badge.svg)](https://github.com/uiwjs/react-shields/actions)\\n[![](https://img.shields.io/github/issues/uiwjs/react-shields.svg)](https://github.com/uiwjs/react-shields/issues)\\n[![](https://img.shields.io/github/forks/uiwjs/react-shields.svg)](https://github.com/uiwjs/react-shields/network)\\n[![](https://img.shields.io/github/stars/uiwjs/react-shields.svg)](https://github.com/uiwjs/react-shields/stargazers)\\n[![](https://img.shields.io/github/v/release/uiwjs/react-shields.svg)](https://github.com/uiwjs/react-shields/releases)\\n[![](https://img.shields.io/npm/v/@uiw/react-shields.svg)](https://www.npmjs.com/package/@uiw/react-shields)\\n[![](https://jaywcjlove.github.io/sb/ico/gitee.svg)](https://gitee.com/uiw/react-shields)\\n\\n<!--dividing-->\\n\\n[Shields.io](https://shields.io/): Quality metadata badges open source projects for react component.\\n\\n## Install\\n\\n```bash\\nnpm install --save @uiw/react-shields\\n# Via Yarn:\\nyarn add @uiw/react-shields\\n```\\n\\n## Usage\\n\\n```jsx\\nimport Github from '@uiw/react-shields';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <Github.Issues user=\\\"uiwjs\\\" repo=\\\"uiw\\\" />\\n      <Github user=\\\"uiwjs\\\" repo=\\\"uiw\\\">\\n        <Github.Issues href=\\\"https://github.com/uiwjs/uiw\\\" type=\\\"issues\\\" />\\n        <Github.Issues type=\\\"issues-raw\\\" />\\n        <Github.Issues type=\\\"issues-closed\\\" />\\n      </Github>\\n      <Github.Size user=\\\"uiwjs\\\" repo=\\\"uiw\\\" />\\n      <Github user=\\\"uiwjs\\\" repo=\\\"uiw\\\">\\n        <Github.Size />\\n        <Github.Size type=\\\"repo-size\\\" />\\n        <Github.Size type=\\\"size\\\" />\\n      </Github>\\n    </>\\n  );\\n}\\n```\\n\\n### Github.Social\\n\\n```jsx\\n<Github.Social user=\\\"jaywcjlove\\\" repo=\\\"uiw\\\" href=\\\"https://github.com/jaywcjlove\\\" />\\n<Github user=\\\"jaywcjlove\\\" repo=\\\"awesome-mac\\\">\\n  <Github.Social type=\\\"forks\\\" />\\n  <Github.Social type=\\\"stars\\\" />\\n  <Github.Social type=\\\"watchers\\\" />\\n  <Github.Social type=\\\"followers\\\" />\\n</Github>\\n```\\n\\n### Npm.Version\\n\\n```jsx\\n<Npm.Version scope=\\\"@uiw\\\" packageName=\\\"react-shields\\\" />\\n<Npm>\\n  <Npm.Version scope=\\\"@uiw\\\" packageName=\\\"react-github-corners\\\" />\\n  <Npm.Version packageName=\\\"hotkeys-js\\\" />\\n  <Npm.Version packageName=\\\"kkt\\\" version=\\\"latest\\\" />\\n  <Npm.Version packageName=\\\"tsbb\\\" />\\n  <Npm.Version\\n    scope=\\\"@uiw\\\"\\n    type=\\\"peer-dependency\\\"\\n    dependency=\\\"react\\\"\\n    packageName=\\\"react-github-corners\\\"\\n  />\\n</Npm>\\n```\\n\\n### Npm.Size\\n\\n```jsx\\n<Npm.Size scope=\\\"@uiw\\\" packageName=\\\"react-shields\\\" />\\n<Npm>\\n  <Npm.Size format=\\\"minzip\\\" scope=\\\"@uiw\\\" packageName=\\\"react-github-corners\\\" />\\n  <Npm.Size packageName=\\\"hotkeys-js\\\" />\\n  <Npm.Size packageName=\\\"kkt\\\" version=\\\"latest\\\" />\\n</Npm>\\n```\\n\\n### Github.Issues\\n\\n```jsx\\n<Github.Issues user=\\\"uiwjs\\\" repo=\\\"uiw\\\" />\\n<Github user=\\\"uiwjs\\\" repo=\\\"uiw\\\">\\n  <Github.Issues type=\\\"issues\\\" />\\n  <Github.Issues type=\\\"issues-raw\\\" />\\n  <Github.Issues type=\\\"issues-closed\\\" />\\n  <Github.Issues type=\\\"issues-closed-raw\\\" />\\n  <Github.Issues type=\\\"issues-pr\\\" />\\n  <Github.Issues type=\\\"issues-pr-raw\\\" />\\n  <Github.Issues type=\\\"issues-pr-closed\\\" />\\n  <Github.Issues type=\\\"issues-pr-closed-raw\\\" />\\n  <Github.Issues type=\\\"issues\\\" label=\\\"bug\\\" />\\n  <Github.Issues type=\\\"issues-raw\\\" label=\\\"bug\\\" />\\n  <Github.Issues type=\\\"issues-pr\\\" label=\\\"bug\\\" />\\n  <Github.Issues type=\\\"issues-pr-raw\\\" label=\\\"bug\\\" />\\n</Github>\\n```\\n\\n### Github.Size\\n\\n```jsx\\n<Github.Size user=\\\"uiwjs\\\" repo=\\\"uiw\\\" />\\n<Github user=\\\"uiwjs\\\" repo=\\\"uiw\\\">\\n  <Github.Size />\\n  <Github.Size type=\\\"repo-size\\\" />\\n  <Github.Size type=\\\"size\\\" />\\n</Github>\\n```\\n\\n### Github.Downloads\\n\\n```jsx\\n<Github.Downloads user=\\\"uiwjs\\\" repo=\\\"uiw\\\" />\\n<Github user=\\\"uiwjs\\\" repo=\\\"uiw\\\">\\n  <Github.Downloads />\\n  <Github.Downloads total={false}/>\\n  <Github.Downloads type=\\\"downloads-pre\\\" />\\n  <Github.Downloads total={false} tag=\\\"v3.9.0\\\"/>\\n  <Github.Downloads tag=\\\"v3.9.0\\\"/>\\n</Github>\\n```\\n\\n### Github.Version\\n\\n```jsx\\n<Github.Version user=\\\"uiwjs\\\" repo=\\\"uiw\\\" />\\n<Github user=\\\"uiwjs\\\" repo=\\\"uiw\\\">\\n  <Github.Version type=\\\"version-tag\\\" />\\n  <Github.Version type=\\\"package-json\\\" />\\n  <Github.Version type=\\\"package-json\\\" branch=\\\"dev\\\" />\\n  <Github.Version user=\\\"jaywcjlove\\\" repo=\\\"wxmp\\\" type=\\\"manifest-json\\\" />\\n  <Github.Version user=\\\"jaywcjlove\\\" repo=\\\"wxmp\\\" type=\\\"manifest-json\\\" branch=\\\"master\\\" />\\n  <Github.Version user=\\\"x-mod\\\" repo=\\\"routine\\\" type=\\\"go-mod\\\" />\\n  <Github.Version user=\\\"x-mod\\\" repo=\\\"routine\\\" type=\\\"go-mod\\\" branch=\\\"master\\\" />\\n</Github>\\n```\\n\\n### Github.License\\n\\n```jsx\\n<Github.License user=\\\"uiwjs\\\" repo=\\\"uiw\\\" />\\n<Github user=\\\"uiwjs\\\" repo=\\\"uiw\\\">\\n  <Github.License />\\n</Github>\\n```\\n\\n### Github.Analysis\\n\\n```jsx\\n<Github.Analysis user=\\\"uiwjs\\\" repo=\\\"uiw\\\" />\\n<Github user=\\\"uiwjs\\\" repo=\\\"uiw\\\">\\n  <Github.Analysis type=\\\"languages-top\\\" />\\n  <Github.Analysis type=\\\"search\\\" query=\\\"github\\\" />\\n</Github>\\n```\\n\\n### Coverage.Coverages\\n\\n```jsx\\n<Coverage.Coverages user=\\\"jaywcjlove\\\" repo=\\\"hotkeys\\\" />\\n<Coverage user=\\\"jaywcjlove\\\" repo=\\\"hotkeys\\\">\\n  <Coverage.Coverages type=\\\"github\\\"  />\\n  <Coverage.Coverages type=\\\"github\\\" />\\n</Coverage>\\n```\\n\\n### Coverage.Codacy\\n\\n```jsx\\n<Coverage.Codacy projectId=\\\"1c524e61cd8640e79b80d406eda8754b\\\" />\\n<Coverage user=\\\"jaywcjlove\\\" repo=\\\"hotkeys\\\">\\n  <Coverage.Codacy projectId=\\\"1c524e61cd8640e79b80d406eda8754b\\\" branch=\\\"master\\\" />\\n  <Coverage.Codacy projectId=\\\"1c524e61cd8640e79b80d406eda8754b\\\" />\\n</Coverage>\\n```\\n\\n## Development\\n\\n```bash\\n# Step 1, Run first, the listener component compiles the output .js file\\nnpm run ts:watch\\n# Step 2, Listen for compiled output type .d.ts file\\nnpm run types:watch\\n# Step 3, Development mode, listen to compile preview site instance\\nnpm run doc:dev\\n```\\n\\nCompile and release\\n\\n```bash\\nnpm run released\\n```\\n\\n## Contributors\\n\\nAs always, thanks to our amazing contributors!\\n\\n<a href=\\\"https://github.com/uiwjs/react-shields/graphs/contributors\\\">\\n  <img src=\\\"https://uiwjs.github.io/react-shields/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\nMade with [action-contributors](https://github.com/jaywcjlove/github-action-contributors).\\n\\n## License\\n\\nLicensed under the MIT License.\";","import App from './App'\n\nimport { createRoot } from 'react-dom/client';\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(<App />);","/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","/**\n * @package @wcj/dark-mode\n * Web Component that toggles dark mode 🌒\n * Github: https://github.com/jaywcjlove/dark-mode.git\n * Website: https://jaywcjlove.github.io/dark-mode\n * \n * Licensed under the MIT license.\n * @license Copyright © 2022. Licensed under the MIT License\n * @author kenny wong <wowohoo@qq.com>\n */\nconst t=document;const e=\"_dark_mode_theme_\";const s=\"permanent\";const o=\"colorschemechange\";const i=\"permanentcolorscheme\";const h=\"light\";const r=\"dark\";const n=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){const t=this.getAttribute(e);return t===null?\"\":t},set(t){this.setAttribute(e,t)}})};const c=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){return this.hasAttribute(e)},set(t){if(t){this.setAttribute(e,\"\")}else{this.removeAttribute(e)}}})};class a extends HTMLElement{static get observedAttributes(){return[\"mode\",h,r,s]}LOCAL_NANE=e;constructor(){super();this.t()}connectedCallback(){n(this,\"mode\");n(this,r);n(this,h);c(this,s);const a=localStorage.getItem(e);if(a&&[h,r].includes(a)){this.mode=a;this.permanent=true}if(this.permanent&&!a){localStorage.setItem(e,this.mode)}const l=[h,r].includes(a);if(this.permanent&&a){this.o()}else{if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: dark)\").matches){this.mode=r;this.o()}if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: light)\").matches){this.mode=h;this.o()}}if(!this.permanent&&!l){window.matchMedia(\"(prefers-color-scheme: light)\").onchange=t=>{this.mode=t.matches?h:r;this.o()};window.matchMedia(\"(prefers-color-scheme: dark)\").onchange=t=>{this.mode=t.matches?r:h;this.o()}}const d=new MutationObserver(((s,h)=>{this.mode=t.documentElement.dataset.colorMode;if(this.permanent&&l){localStorage.setItem(e,this.mode);this.i(i,{permanent:this.permanent})}this.h();this.i(o,{colorScheme:this.mode})}));d.observe(t.documentElement,{attributes:true});this.i(o,{colorScheme:this.mode});this.h()}attributeChangedCallback(t,s,o){if(t===\"mode\"&&s!==o&&[h,r].includes(o)){const t=localStorage.getItem(e);if(this.mode===t){this.mode=o;this.h();this.o()}else if(this.mode&&this.mode!==t){this.h();this.o()}}else if((t===h||t===r)&&s!==o){this.h()}if(t===\"permanent\"&&typeof this.permanent===\"boolean\"){this.permanent?localStorage.setItem(e,this.mode):localStorage.removeItem(e)}}o(){t.documentElement.setAttribute(\"data-color-mode\",this.mode)}h(){this.icon.textContent=this.mode===h?\"🌒\":\"🌞\";this.text.textContent=this.mode===h?this.getAttribute(r):this.getAttribute(h);if(!this.text.textContent&&this.text.parentElement&&this.text){this.text.parentElement.removeChild(this.text)}}t(){var s=this.attachShadow({mode:\"open\"});this.label=t.createElement(\"span\");this.label.setAttribute(\"class\",\"wrapper\");this.label.onclick=()=>{this.mode=this.mode===h?r:h;if(this.permanent){localStorage.setItem(e,this.mode)}this.o();this.h()};s.appendChild(this.label);this.icon=t.createElement(\"span\");this.label.appendChild(this.icon);this.text=t.createElement(\"span\");this.label.appendChild(this.text);const o=`\\n[data-color-mode*='dark'], [data-color-mode*='dark'] body {\\n  color-scheme: dark;\\n  --color-theme-bg: #0d1117;\\n  --color-theme-text: #c9d1d9;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}\\n\\n[data-color-mode*='light'], [data-color-mode*='light'] body {\\n  color-scheme: light;\\n  --color-theme-bg: #fff;\\n  --color-theme-text: #24292f;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}`;const i=\"_dark_mode_style_\";const n=t.getElementById(i);if(!n){var c=t.createElement(\"style\");c.id=i;c.textContent=o;t.head.appendChild(c)}var a=t.createElement(\"style\");a.textContent=`\\n    .wrapper { cursor: pointer; user-select: none; position: relative; }\\n    .wrapper > span + span { margin-left: .4rem; }\\n    `;s.appendChild(a)}i(t,e){this.dispatchEvent(new CustomEvent(t,{bubbles:true,composed:true,detail:e}))}}customElements.define(\"dark-mode\",a);","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeFunction = require(\"./isNativeFunction.js\");\nvar construct = require(\"./construct.js\");\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_uiw_react_shields\"] = self[\"webpackChunk_uiw_react_shields\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [269,438,264], function() { return __webpack_require__(1713); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","a","push","instance","Function","setPrototypeOf","_wrapNativeSuper","_cache","Map","undefined","fn","toString","TypeError","has","get","set","Wrapper","getPrototypeOf","constructor","create","value","enumerable","writable","configurable","GITHUB_CORNERS_TEMPLATE","document","createElement","innerHTML","GithubCorners","_HTMLElement","_inherits","_super","_createSuper","_this","_classCallCheck","right","shadow","attachShadow","mode","appendChild","ownerDocument","importNode","content","update","_createClass","name","svg","querySelector","test","toLocaleLowerCase","lastElementChild","setAttribute","firstElementChild","style","_this2","concat","_toConsumableArray","getAttributeNames","forEach","getAttribute","setAttr","oldValue","newValue","HTMLElement","customElements","define","githubCorners","props","_props$size","size","_props$fixed","fixed","bottom","zIndex","_props$bgColor","bgColor","_props$color","color","_props$position","position","otherProps","_excluded","styl","left","transform","top","_jsx","width","height","href","fill","_defineProperty","obj","toPropertyKey","defineProperty","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","stringifyPosition","point","index","line","column","pos","start","end","VFileMessage","_Error","reason","place","origin","parts","slice","message","stack","fatal","ruleId","file","actual","expected","url","note","Error","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","_len","segments","Array","_key","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","options","bufferLike","buffer","data","messages","history","stored","map","prop","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arr","isArray","iterableToArray","unsupportedIterableToArray","bail","isPlainObject","Symbol","toStringTag","iterator","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","_len2","output","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","done","Promise","then","_len4","_key4","wrap","use","middelware","unified","base","frozen","transformers","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","_attachers$freezeInde","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","add","_value","plugin","plugins","entry","isPlainObj","extend","parse","doc","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","isBuffer","processSync","destination","type","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","factorySpace","effects","ok","max","limit","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterReference","numeric","decodeNamedCharacterReference","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","_document","_flowInitial","_flow","_string","_text","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","d","combined","_combined$key","_combined$key2","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","_checks$index","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","lines","trimLine","codePointAt","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","src","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","whitespace","thing","hastToReact","classId","dataType","itemId","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","typeOf","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlnsXLink","protocols","uriTransformer","uri","trim","first","charAt","colon","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","property","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","find","commaSeparated","commas","spaces","_unused","v","k","styleReplacer","parseStyle","attribute","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","p","s","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","labelAtMarker","labelInside","whitespaceAfter","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","ccount","character","findAndReplace","RegExp","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","_nodes","global","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","email","association","repeat","eol","patternCompile","pattern","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","encode","b","whole","track","lineShift","move","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","safeOptions","tracker","subexit","indentLines","indexStack","createTracker","handle","bulletLastUsed","containerFlow","blank","containerPhrasing","peek","handleDelete","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","row","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","sizes","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","core","webNamespaces","mathml","xlink","xml","xmlns","proto","nodeName","quirksMode","childNodes","location","loc","indices","toPoint","toOffset","isNaN","namespaceURI","attrs","h","sourceCodeLocation","endTag","element","verbose","opening","closing","createLocation","startLine","startCol","startOffset","endLine","endCol","endOffset","zwitch","invalid","unknown","_fn","currentSchema","createProperty","parentNode","doctype","publicId","systemId","boolean","htmlVoidElements","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","raw","stitches","preprocessor","posTracker","locationTracker","resetTokenizer","_processInputToken","createParse5Location","chars","forceQuirks","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitch","options_","fromParse5","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","attributes","toParse5","rehypeRaw","hasProperty","isNode","headingRank","slugs","BananaSlug","occurrences","reset","maintainCase","slug","originalSlug","rehypeSlug","convertElement","tagNameFactory","contentDefaults","rehypeAutolinkHeadings","method","behavior","behaviour","toChildren","grouping","toNode","ariaHidden","tabIndex","nextChild","codeBlockParames","getCommentObject","_ref","_ref$value","param","reduce","getURLParameters","keyName","propertiesHandle","defaultAttrs","rehyp","_options$properties","_options$codeBlockPar","firstChild","prevChild","attr","_options$openDelimite","openDelimiter","_options$closeDelimit","closeDelimiter","str","o","r","e","u","f","metastring","m","t","c","n","g","highlight","ignoreMissing","l","entries","y","groups","w","N","j","cascadeRaw","cascade","preorder","showLineNumbers","some","substring","x","rtlRange","ltrRange","rtl","ltr","dirBidi","direction","dirProperty","dir","query","operator","normalizeValue","tags","ranges","cast","matches","rightIndex","range","leftIndex","tag","extendedFilter","ZERO","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","idx","sign","readSign","number","readNumber","skipWhitespace","fauxEsmNthCheck","any","someChildren","_1","_2","_3","empty","enabled","assertDeep","elementIndex","typeIndex","childState","found","shallow","scopeElements","rootQuery","queryToSelectors","walk","language","elementCount","typeCount","not","getCachedNthCheck","optional","required","readWrite","scope","pseudo","pseudos","editableOrEditingHost","_cachedFn","classNames","needsIndex","selectors","currentRules","nestResult","directChild","descendant","adjacentSibling","generalSibling","dirInferred","currentDirection","xmlLang","contentEditable","enterState","rules","selectorIndex","ruleSet","rule","nest","nestingOperator","applySelectors","combine","fromSibling","fromParent","total","types","counts","CssSelectorParser","selector","registerAttrEqualityMods","registerSelectorPseudos","registerNestingOperators","getCodeString","rewrite","selected","selectAll","octiconLink","viewBox","version","fillRule","reservedMeta","ref","_props$prefixCls","prefixCls","_props$disableCopy","disableCopy","_props$skipHtml","onScroll","onMouseOver","pluginsFilter","rehypeRewrite","_props$wrapperElement","wrapperElement","_props$warpperElement","warpperElement","other","mdp","useImperativeHandle","cls","container","useCallback","currentTarget","classList","copyTextToClipboard","dataset","setTimeout","useEffect","_container$current","btns","querySelectorAll","elm","addEventListener","removeEventListener","useCopied","rehypePrism","headings","rehypeIgnore","class","rehypeAttrs","customProps","wrapperProps","Container","_Component","_Fragment","Component","Base","defaultState","forceState","getUrl","_jsxs","defaultProps","platform","Issue","_Base","_this$state","user","repo","Size","Activity","baseData","interval","variant","branch","Version","typePath","License","Analysis","Social","Github","_Container","Issues","Downloads","Coverages","Codacy","projectId","Coverage","packageName","dependency","dependencyScope","registryUri","format","Npm","light","dark","GitHubCorners","logo","MarkdownPreview","MDStr","getElementById","createRoot","render","App","cb","el","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","err","removeChild","removeAllRanges","addRange","_assertThisInitialized","hasAttribute","removeAttribute","localStorage","getItem","permanent","setItem","window","matchMedia","onchange","MutationObserver","documentElement","colorMode","colorScheme","observe","removeItem","icon","textContent","parentElement","_this3","onclick","dispatchEvent","CustomEvent","bubbles","composed","detail","module","exports","trueFunc","falseFunc","parser_context_1","require","render_1","attrEqualityMods","ruleNestingOperators","substitutesEnabled","_i","_a","pseudos_1","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","operators","operators_1","unregisterNestingOperators","operators_2","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parseCssSelector","renderEntity","utils_1","chr","getStr","quote","escapeTable","esc","isHex","getIdent","isIdent","identSpecialChars","parseSelector","parseSingleSelector","res","parseRule","currentRule","op","isIdentStart","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","pseudoName","entity","currentEntity","escapeIdentifier","cn","escapeStr","len","charCode","extraCharCode","strReplacementsRev","hasOwn","toStr","gOPD","hasOwnConstructor","hasIsPrototypeOf","setProperty","getProperty","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","errorsList","msg","filename","silent","re","comments","val","ret","decl","decls","declarations","parsePart","_step","_iterator","_createForOfIteratorHelper","_m2","_slicedToArray","lhs","rhs","incr","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","symbol","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","for","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","C","sortIndex","performance","unstable_now","Date","z","A","B","D","E","clearTimeout","F","setImmediate","G","startTime","expirationTime","H","I","J","K","L","M","priorityLevel","navigator","scheduling","isInputPending","S","O","P","Q","R","MessageChannel","T","U","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","StyleToObject","hasIterator","arr2","__esModule","ReferenceError","Constructor","_defineProperties","descriptor","protoProps","staticProps","allowArrayLike","it","_e","normalCompletion","didErr","_e2","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","superPropBase","_get","receiver","desc","_getPrototypeOf","__proto__","subClass","superClass","sham","Proxy","valueOf","_s","_x","_r","_arr","_n","_d","_typeof","assertThisInitialized","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","hint","prim","toPrimitive","arg","arrayLikeToArray","minLen","isNativeFunction","_arrayLikeToArray","_isNativeReflectConstruct","_iterableToArray","iter","_toPropertyKey","_unsupportedIterableToArray","tokens","padRight","padLeft","char","buttonTypes","defaultTagName","caseSensitive","createAdjustMap","subvalue","isProperties","addChild","spaceSeparated","commaOrSpaceSeparated","parsePrimitive","finalResult","overloadedBoolean","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","additional","queue","following","begin","characterReferenceCharacters","characters","terminated","namedReference","diff","nonTerminated","warning","referenceCode","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","merge","DefinedInfo","mustUseProperty","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemProp","itemRef","itemScope","itemType","loading","loop","low","manifest","maxLength","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","reversed","rowSpan","sandbox","scoped","seamless","slot","span","spellCheck","srcDoc","srcLang","srcSet","translate","typeMustMatch","useMap","aLink","archive","axis","background","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dominantBaseline","enableBackground","fillOpacity","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","valid","dash","cap","Type","Info","rest","camelcase","dashes","kebab","_Info","mark","powers","increment","pow","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","getter","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}